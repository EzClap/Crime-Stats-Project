{"ast":null,"code":"import _classCallCheck from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackhu/Downloads/crime/src/chart.js\";\nimport React from \"react\";\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      chartData: {}\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var lga = [this.props.map(function (area) {\n        area.lga;\n      })];\n      var numbers = [this.props.map(function (area) {\n        area.total;\n      })];\n      this.setState({\n        chartData: {\n          labels: lga,\n          datasets: {\n            label: 'LGA',\n            data: numbers // backgroundColor:[],\n\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.chartData,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport { Chart };","map":{"version":3,"sources":["/Users/jackhu/Downloads/crime/src/chart.js"],"names":["React","Bar","Line","Pie","Chart","props","state","chartData","lga","map","area","numbers","total","setState","labels","datasets","label","data","maintainAspectRatio","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,QAA6B,iBAA7B;;IAEMC,K;;;;;AACE,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC;AADD,KAAb;AAFc;AAOjB;;;;yCAEmB;AAChB,UAAIC,GAAG,GAAG,CAAC,KAAKH,KAAL,CAAWI,GAAX,CAAe,UAACC,IAAD,EAAU;AAChCA,QAAAA,IAAI,CAACF,GAAL;AACH,OAFU,CAAD,CAAV;AAGA,UAAIG,OAAO,GAAG,CAAC,KAAKN,KAAL,CAAWI,GAAX,CAAe,UAACC,IAAD,EAAU;AACpCA,QAAAA,IAAI,CAACE,KAAL;AACH,OAFc,CAAD,CAAd;AAGA,WAAKC,QAAL,CAAc;AACVN,QAAAA,SAAS,EAAC;AACNO,UAAAA,MAAM,EAAEN,GADF;AAENO,UAAAA,QAAQ,EAAC;AACLC,YAAAA,KAAK,EAAE,KADF;AAELC,YAAAA,IAAI,EAACN,OAFA,CAGL;;AAHK;AAFH;AADA,OAAd;AAUH;;;6BAEO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,SADrB;AAGI,QAAA,OAAO,EAAE;AACLW,UAAAA,mBAAmB,EAAE;AADhB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAWH;;;;EAzCWlB,KAAK,CAACmB,S;;AA2C1B,SAAQf,KAAR","sourcesContent":["import React from \"react\";\nimport {Bar, Line, Pie} from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = {\n                chartData:{\n                    \n                }\n            }\n        }\n\n        componentWillMount(){\n            let lga = [this.props.map((area) => {\n                area.lga\n            })]\n            let numbers = [this.props.map((area) => {\n                area.total\n            }),]\n            this.setState({\n                chartData:{\n                    labels: lga,\n                    datasets:{\n                        label: 'LGA',\n                        data:numbers,\n                        // backgroundColor:[],\n                    }\n                }\n            })\n        }\n\n        render(){\n            return (\n                <div className=\"graph\">\n                    <Bar \n                        data={this.state.chartData}\n\n                        options={{\n                            maintainAspectRatio: false\n                        }}                    \n                    />              \n                </div>\n            )\n        }\n}\nexport {Chart}"]},"metadata":{},"sourceType":"module"}