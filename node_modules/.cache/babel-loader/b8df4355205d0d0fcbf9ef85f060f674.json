{"ast":null,"code":"var JWT = null;\n\nfunction queryString(obj) {\n  var params = \"\";\n\n  for (var key in obj) {\n    var curIndex = Object.keys(obj).indexOf(key);\n    curIndex == 0 ? params += encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]) : params += \"&\" + encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]);\n  }\n\n  return params;\n}\n\nexport var RegAcc = function RegAcc() {\n  fetch(\"https://cab230.hackhouse.sh/register\", {\n    method: \"POST\",\n    body: \"email=jackisplendid%40gmail.com&password=1qaz2wsx2\",\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(function (response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(\"Network response was not ok\");\n  }).then(function (result) {\n    var queryDiv = document.getElementById(\"query\");\n    queryDiv.innerHTML = JSON.stringify(result);\n    RegAcc.disabled = true;\n  }).catch(function (error) {\n    console.log(\"There has been a problem with your fetch operation: \", error.message);\n  });\n};\nexport var LoginAcc = function LoginAcc(emailinput, passwordinput) {\n  fetch(\"https://cab230.hackhouse.sh/login\", {\n    method: \"POST\",\n    body: \"email=jackisplendid%40gmail.com&password=1qaz2wsx2\",\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(function (response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(\"Network response was not ok.\");\n  }).then(function (result) {\n    var queryDiv = document.getElementById(\"query\");\n    queryDiv.innerHTML = JSON.stringify(result);\n    JWT = result.token;\n  }).catch(function (error) {\n    console.log(\"There has been a problem with your fetch operation: \", error.message);\n  });\n};","map":{"version":3,"sources":["/Users/jackhu/Downloads/crime/src/api.js"],"names":["JWT","queryString","obj","params","key","curIndex","Object","keys","indexOf","encodeURIComponent","RegAcc","fetch","method","body","headers","then","response","ok","json","Error","result","queryDiv","document","getElementById","innerHTML","JSON","stringify","disabled","catch","error","console","log","message","LoginAcc","emailinput","passwordinput","token"],"mappings":"AACA,IAAIA,GAAG,GAAG,IAAV;;AAGA,SAASC,WAAT,CAAsBC,GAAtB,EAA0B;AACtB,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAoB;AAChB,QAAIG,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAAyBJ,GAAzB,CAAf;AACCC,IAAAA,QAAQ,IAAI,CAAb,GAAkBF,MAAM,IAAIM,kBAAkB,CAACL,GAAD,CAAlB,GAA0B,GAA1B,GAAgCK,kBAAkB,CAACP,GAAG,CAACE,GAAD,CAAJ,CAA9E,GACAD,MAAM,IAAI,MAAMM,kBAAkB,CAACL,GAAD,CAAxB,GAAgC,GAAhC,GAAsCK,kBAAkB,CAACP,GAAG,CAACE,GAAD,CAAJ,CADlE;AAEH;;AAED,SAAOD,MAAP;AACH;;AAED,OAAO,IAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBC,EAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAE,oDAFoC;AAG1CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHiC,GAAzC,CAAL,CAOKC,IAPL,CAOU,UAAUC,QAAV,EAAoB;AACtB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,UAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACH,GAZL,EAaKJ,IAbL,CAaU,UAAUK,MAAV,EAAkB;AACpB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAArB;AACAV,IAAAA,MAAM,CAACiB,QAAP,GAAkB,IAAlB;AACH,GAjBL,EAkBKC,KAlBL,CAkBW,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CACI,sDADJ,EAEIF,KAAK,CAACG,OAFV;AAIH,GAvBL;AAwBH,CAzBM;AA2BP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAaC,aAAb,EAA+B;AACnDxB,EAAAA,KAAK,CAAC,mCAAD,EAAsC;AACvCC,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,IAAI,EAAE,oDAFiC;AAGvCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAH8B,GAAtC,CAAL,CAOKC,IAPL,CAOU,UAAUC,QAAV,EAAoB;AACtB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,UAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACH,GAZL,EAaKJ,IAbL,CAaU,UAAUK,MAAV,EAAkB;AACpB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAArB;AACApB,IAAAA,GAAG,GAAGoB,MAAM,CAACgB,KAAb;AACH,GAjBL,EAkBKR,KAlBL,CAkBW,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CACI,sDADJ,EAEIF,KAAK,CAACG,OAFV;AAIH,GAvBL;AAwBH,CAzBM","sourcesContent":["\nlet JWT = null;\n\n\nfunction queryString (obj){\n    let params = \"\";\n    \n    for (var key in obj){\n        let curIndex = Object.keys(obj).indexOf(key);\n        (curIndex == 0) ? params += encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]) : \n        params += \"&\" + encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]);\n    }\n\n    return params;\n}\n\nexport const RegAcc = () => {\n    fetch(\"https://cab230.hackhouse.sh/register\", {\n        method: \"POST\",\n        body: \"email=jackisplendid%40gmail.com&password=1qaz2wsx2\",\n        headers: {\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n        }\n    })\n        .then(function (response) {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error(\"Network response was not ok\");\n        })\n        .then(function (result) {\n            let queryDiv = document.getElementById(\"query\");\n            queryDiv.innerHTML = JSON.stringify(result);\n            RegAcc.disabled = true;\n        })\n        .catch(function (error) {\n            console.log(\n                \"There has been a problem with your fetch operation: \",\n                error.message\n            );\n        });\n}\n\nexport const LoginAcc = (emailinput, passwordinput) => {\n    fetch(\"https://cab230.hackhouse.sh/login\", {\n        method: \"POST\",\n        body: \"email=jackisplendid%40gmail.com&password=1qaz2wsx2\",\n        headers: {\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n        }\n    })\n        .then(function (response) {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error(\"Network response was not ok.\");\n        })\n        .then(function (result) {\n            let queryDiv = document.getElementById(\"query\");\n            queryDiv.innerHTML = JSON.stringify(result);\n            JWT = result.token;\n        })\n        .catch(function (error) {\n            console.log(\n                \"There has been a problem with your fetch operation: \",\n                error.message\n            );\n        });\n}\n"]},"metadata":{},"sourceType":"module"}