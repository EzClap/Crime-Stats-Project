{"ast":null,"code":"import _slicedToArray from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useState } from \"react\";\nimport Main from \"./main\";\nvar JWT = null;\nexport var RegAcc = function RegAcc(emailinput, passcodeinput) {\n  fetch(\"https://cab230.hackhouse.sh/register\", {\n    method: \"POST\",\n    body: \"email=\" + emailinput + \"&password=\" + passcodeinput,\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(function (response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(\"Network response was not ok\");\n  }).then(function (result) {\n    var queryDiv = document.getElementById(\"query\");\n    queryDiv.innerHTML = JSON.stringify(result);\n    RegAcc.disabled = true;\n  }).catch(function (error) {\n    console.log(\"There has been a problem with your fetch operation: \", error.message);\n  });\n};\nexport var LoginAcc = function LoginAcc(emailinput, passcodeinput) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isThru = _useState2[0],\n      setIsthru = _useState2[1];\n\n  fetch(\"https://cab230.hackhouse.sh/login\", {\n    method: \"POST\",\n    body: \"email=\" + emailinput + \"&password=\" + passcodeinput,\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    },\n    redirect: \"follow\"\n  }).then(function (response) {\n    if (response.ok) {\n      setIsthru(true);\n      return isThru; // return response.json();\n    }\n\n    throw new Error(\"Network response was not ok.\");\n  }).then(function (result) {\n    var queryDiv = document.getElementById(\"query\");\n    queryDiv.innerHTML = JSON.stringify(result);\n    JWT = result.token;\n    Main();\n  }).catch(function (error) {\n    console.log(\"There has been a problem with your fetch operation: \", error.message);\n  });\n};","map":{"version":3,"sources":["/Users/jackhu/Downloads/crime/src/api.js"],"names":["React","ReactDOM","useState","Main","JWT","RegAcc","emailinput","passcodeinput","fetch","method","body","headers","then","response","ok","json","Error","result","queryDiv","document","getElementById","innerHTML","JSON","stringify","disabled","catch","error","console","log","message","LoginAcc","isThru","setIsthru","redirect","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAIC,GAAG,GAAG,IAAV;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,UAAD,EAAaC,aAAb,EAA+B;AACjDC,EAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAE,WAAUJ,UAAV,GAAuB,YAAvB,GAAsCC,aAFF;AAG1CI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHiC,GAAzC,CAAL,CAOKC,IAPL,CAOU,UAAUC,QAAV,EAAoB;AACtB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,UAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACH,GAZL,EAaKJ,IAbL,CAaU,UAAUK,MAAV,EAAkB;AACpB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAArB;AACAZ,IAAAA,MAAM,CAACmB,QAAP,GAAkB,IAAlB;AAEH,GAlBL,EAmBKC,KAnBL,CAmBW,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CACI,sDADJ,EAEIF,KAAK,CAACG,OAFV;AAIH,GAxBL;AAyBH,CA1BM;AA4BP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACxB,UAAD,EAAaC,aAAb,EAA6B;AAAA,kBACrBL,QAAQ,CAAC,KAAD,CADa;AAAA;AAAA,MAC1C6B,MAD0C;AAAA,MAClCC,SADkC;;AAEjDxB,EAAAA,KAAK,CAAC,mCAAD,EAAsC;AACvCC,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,IAAI,EAAE,WAAUJ,UAAV,GAAuB,YAAvB,GAAsCC,aAFL;AAGvCI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAH8B;AAMvCsB,IAAAA,QAAQ,EAAE;AAN6B,GAAtC,CAAL,CAQKrB,IARL,CAQU,UAAUC,QAAV,EAAoB;AACtB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACdkB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,aAAOD,MAAP,CAFc,CAGb;AACH;;AACD,UAAM,IAAIf,KAAJ,CAAU,8BAAV,CAAN;AACH,GAfL,EAiBKJ,IAjBL,CAiBU,UAAUK,MAAV,EAAkB;AACpB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAArB;AACAb,IAAAA,GAAG,GAAGa,MAAM,CAACiB,KAAb;AACA/B,IAAAA,IAAI;AAEP,GAvBL,EAwBKsB,KAxBL,CAwBW,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CACI,sDADJ,EAEIF,KAAK,CAACG,OAFV;AAIH,GA7BL;AA8BH,CAhCM","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {useState} from \"react\";\nimport Main from \"./main\";\n\nlet JWT = null;\nexport const RegAcc = (emailinput, passcodeinput) => {\n    fetch(\"https://cab230.hackhouse.sh/register\", {\n        method: \"POST\",\n        body: \"email=\"+ emailinput + \"&password=\" + passcodeinput,\n        headers: {\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n        },\n    })\n        .then(function (response) {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error(\"Network response was not ok\");\n        })\n        .then(function (result) {\n            let queryDiv = document.getElementById(\"query\");\n            queryDiv.innerHTML = JSON.stringify(result);\n            RegAcc.disabled = true;\n            \n        })\n        .catch(function (error) {\n            console.log(\n                \"There has been a problem with your fetch operation: \",\n                error.message\n            );\n        });\n}\n\nexport const LoginAcc = (emailinput, passcodeinput)=>{\n    const [isThru, setIsthru] = useState(false);\n    fetch(\"https://cab230.hackhouse.sh/login\", {\n        method: \"POST\",\n        body: \"email=\"+ emailinput + \"&password=\" + passcodeinput,\n        headers: {\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n        },\n        redirect: \"follow\",\n    })\n        .then(function (response) {\n            if (response.ok) {\n               setIsthru(true);\n               return isThru;\n                // return response.json();\n            }\n            throw new Error(\"Network response was not ok.\");\n        })\n\n        .then(function (result) {\n            let queryDiv = document.getElementById(\"query\");\n            queryDiv.innerHTML = JSON.stringify(result);\n            JWT = result.token;\n            Main();\n\n        })\n        .catch(function (error) {\n            console.log(\n                \"There has been a problem with your fetch operation: \",\n                error.message\n            );\n        });\n}\n"]},"metadata":{},"sourceType":"module"}