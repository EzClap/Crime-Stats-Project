{"ast":null,"code":"import _toConsumableArray from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jackhu/Downloads/crime/src/lognreg.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Constants from \"./api\";\n\nvar LoginBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginBox, _React$Component);\n\n  function LoginBox(props) {\n    var _this;\n\n    _classCallCheck(this, LoginBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginBox).call(this, props));\n    _this.state = {\n      emailAcc: \"\",\n      passCode: \"\",\n      errors: []\n    };\n    _this.changeEmail = _this.changeEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changePass = _this.changePass.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginBox, [{\n    key: \"changeEmail\",\n    value: function changeEmail(event) {\n      this.setState({\n        emailAcc: event.target.value\n      });\n      this.clearValidErr(\"emailAcc\");\n    }\n  }, {\n    key: \"changePass\",\n    value: function changePass(event) {\n      this.setState({\n        passCode: event.target.value\n      });\n      this.clearValidErr(\"passCode\");\n      console.log(this.clearValidErr(\"passCode\"));\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(e) {\n      if (this.state.emailAcc === \"\") {\n        this.showValidErr(\"emailAcc\", \"email cannot be empty!\");\n      }\n\n      if (this.state.passCode === \"\") {\n        this.showValidErr(\"passCode\", \"password cannot be empty!\");\n      }\n\n      Constants.LoginAcc(this.state.emailAcc, this.state.passCode);\n    }\n  }, {\n    key: \"showValidErr\",\n    value: function showValidErr(elem, msg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elem: elem,\n            msg: msg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidErr\",\n    value: function clearValidErr(elem) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elem != err.elem) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return newArr;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var emailErr = null,\n          passErr = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          if (err.elem === \"emailAcc\") {\n            emailErr = err.msg;\n          }\n\n          if (err.elem === \"passCode\") {\n            passErr = err.msg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"SIGN IN NOW\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        className: \"login-input\",\n        placeholder: \"Your email address\",\n        value: this.state.emailAcc,\n        onChange: this.changeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pwd\",\n        id: \"pwd\",\n        className: \"login-input\",\n        placeholder: \"Password\",\n        value: this.state.passCode,\n        onChange: this.changePass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"danger-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, passErr ? passErr : \"\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.submitLogin.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Sign in\")));\n    }\n  }]);\n\n  return LoginBox;\n}(React.Component);\n\nvar RegisterBox =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(RegisterBox, _React$Component2);\n\n  function RegisterBox(props) {\n    var _this2;\n\n    _classCallCheck(this, RegisterBox);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(RegisterBox).call(this, props));\n    _this2.state = {\n      emailAcc: \"\",\n      passCode: \"\"\n    };\n    _this2.changeEmail = _this2.changeEmail.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.changePass = _this2.changePass.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(RegisterBox, [{\n    key: \"changeEmail\",\n    value: function changeEmail(event) {\n      this.setState({\n        emailAcc: event.target.value\n      });\n    }\n  }, {\n    key: \"changePass\",\n    value: function changePass(event) {\n      this.setState({\n        passCode: event.target.value\n      });\n    }\n  }, {\n    key: \"submitReg\",\n    value: function submitReg(e) {\n      Constants.RegAcc(this.state.emailAcc, this.state.passCode);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"inner-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"REGISTER ACCOUNT\"), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"reg-input\",\n        placeholder: \"Your email address\",\n        value: this.state.emailAcc,\n        onChange: this.changeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pwd\",\n        className: \"reg-input\",\n        placeholder: \"Password\",\n        value: this.state.passCode,\n        onChange: this.changePass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"reg-btn\",\n        onClick: this.submitReg.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Sign up\")));\n    }\n  }]);\n\n  return RegisterBox;\n}(React.Component);\n\nexport { LoginBox, RegisterBox };","map":{"version":3,"sources":["/Users/jackhu/Downloads/crime/src/lognreg.js"],"names":["React","ReactDOM","Constants","LoginBox","props","state","emailAcc","passCode","errors","changeEmail","bind","changePass","event","setState","target","value","clearValidErr","console","log","e","showValidErr","LoginAcc","elem","msg","prevState","newArr","err","push","emailErr","passErr","submitLogin","Component","RegisterBox","RegAcc","submitReg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Constants from \"./api\";\n\n\nclass LoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailAcc: \"\",\n            passCode: \"\",\n            errors: [],\n        };\n\n        this.changeEmail = this.changeEmail.bind(this);\n        this.changePass = this.changePass.bind(this);\n    }\n\n    changeEmail(event) {\n        this.setState({ emailAcc: event.target.value });\n        this.clearValidErr(\"emailAcc\");\n    }\n    changePass(event) {\n        this.setState({ passCode: event.target.value });\n        this.clearValidErr(\"passCode\");\n        console.log(this.clearValidErr(\"passCode\"));\n    }\n    submitLogin(e) {\n        if (this.state.emailAcc === \"\") {\n            this.showValidErr(\"emailAcc\", \"email cannot be empty!\")\n        }\n        if (this.state.passCode === \"\") {\n             this.showValidErr(\"passCode\", \"password cannot be empty!\")\n        }\n\n        Constants.LoginAcc(this.state.emailAcc, this.state.passCode)\n    }\n\n    showValidErr(elem, msg) {\n        this.setState((prevState) => ({ errors: [...prevState.errors, { elem, msg }] }));\n    }\n\n    clearValidErr(elem) {\n        this.setState((prevState) => {\n            let newArr = [];\n            for (let err of prevState.errors) {\n                if (elem != err.elem) {\n                    newArr.push(err);\n                }\n            }\n            return newArr;\n        })\n    }\n\n    render() {\n        let emailErr = null, passErr = null;\n\n        for (let err of this.state.errors) {\n            if (err.elem === \"emailAcc\") {\n                emailErr = err.msg;\n            }\n            if (err.elem === \"passCode\") {\n                passErr = err.msg;\n            }\n        }\n        return (\n            <div className=\"inner-container\">\n                <div className=\"header\">\n                    SIGN IN NOW\n            </div>\n\n                <div className=\"box\">\n                    <div className=\"input-group\">\n\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" id=\"email\" className=\"login-input\" placeholder=\"Your email address\" value={this.state.emailAcc}\n                            onChange={this.changeEmail} />\n                        <small className=\"danger-error\">{emailErr ? emailErr : \"\"}</small>\n                    </div>\n\n                    <div className=\"input-group\">\n\n                        <label htmlFor=\"pwd\">Password</label>\n                        <input type=\"text\" name=\"pwd\" id=\"pwd\" className=\"login-input\" placeholder=\"Password\" value={this.state.passCode}\n                            onChange={this.changePass} />\n                        <small className=\"danger-error\">{passErr ? passErr : \"\"}</small>\n                    </div>\n                    <button type=\"button\" className=\"login-btn\" onClick={this.submitLogin.bind(this)}>Sign in</button>\n\n                </div>\n\n\n            </div>\n        );\n    }\n\n}\n\nclass RegisterBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailAcc: \"\",\n            passCode: \"\",\n        };\n\n        this.changeEmail = this.changeEmail.bind(this);\n        this.changePass = this.changePass.bind(this);\n    }\n\n    changeEmail(event) {\n        this.setState({ emailAcc: event.target.value });\n    }\n\n    changePass(event) {\n        this.setState({ passCode: event.target.value });\n    }\n\n    submitReg(e) {\n        Constants.RegAcc(this.state.emailAcc, this.state.passCode);\n    }\n\n    render() {\n        \n        return (\n            <div className=\"inner-container\">\n                <div className=\"header\">\n                    REGISTER ACCOUNT\n            </div>\n                <div className=\"box\">\n\n                    <div className=\"input-group\">\n\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" name=\"email\" className=\"reg-input\" placeholder=\"Your email address\" value={this.state.emailAcc}\n                            onChange={this.changeEmail} />\n                    </div>\n\n                    <div className=\"input-group\">\n\n                        <label htmlFor=\"pwd\">Password</label>\n                        <input type=\"text\" name=\"pwd\" className=\"reg-input\" placeholder=\"Password\" value={this.state.passCode}\n                            onChange={this.changePass} />\n                    </div>\n\n                    <button type=\"button\" className=\"reg-btn\" onClick={this.submitReg.bind(this)}>Sign up</button>\n\n                </div>\n\n\n            </div>\n        );\n    }\n\n}\n\nexport { LoginBox, RegisterBox } "]},"metadata":{},"sourceType":"module"}