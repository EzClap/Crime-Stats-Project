{"ast":null,"code":"import _classCallCheck from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jackhu/Downloads/crime/src/newsearch.js\";\nimport React from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { filterCaseInsensitive } from \"./offences\";\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport GoogleMapReact from 'google-map-react';\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, text);\n};\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.fetchdata = function () {\n      var key = sessionStorage.getItem(\"token\");\n      var getParam = {\n        method: \"GET\"\n      };\n      var head = {\n        Authorization: \"Bearer \".concat(key)\n      };\n      getParam.headers = head;\n      var baseUrl = \"https://cab230.hackhouse.sh/search?\";\n      var query = \"offence=\" + _this.state.offsearch;\n      var filterlga = \"area=\" + _this.state.areasearch;\n      var filterage = \"age=\" + _this.state.agesearch;\n      var filtergender = \"gender=\" + _this.state.gendersearch;\n      var filteryear = \"year=\" + _this.state.yearsearch;\n      var filtermonth = \"month=\" + _this.state.monthsearch;\n      var url = baseUrl + query + \"&\" + filterlga + \"&\" + filterage + \"&\" + filtergender + \"&\" + filteryear + \"&\" + filtermonth;\n      fetch(encodeURI(url), getParam).then(function (result) {\n        return result.json();\n      }).then(function (data) {\n        //Fill in data for the table \n        var results = data.result.map(function (off) {\n          return {\n            LGA: off.LGA,\n            total: off.total\n          };\n        }); //Fill in data for Heat map \n\n        var GPS = data.result.map(function (latlng) {\n          return {\n            lat: latlng.lat,\n            lng: latlng.lng,\n            weight: latlng.total\n          };\n        });\n        var nozero = [];\n\n        for (var i = 0; i < results.length; i++) {\n          if (results[i].total !== 0) {\n            nozero.push(results[i]);\n          }\n        }\n\n        _this.setState({\n          results: nozero\n        });\n\n        _this.setState({\n          GPS: GPS\n        });\n      }).then( //Clear Map for re-rendering later\n      //Heatmap is not updated dynamically\n      _this.setState({\n        updated: false\n      })).catch(function (error) {\n        console.log(\"There has been a problem with your fetch operation: \", error.message);\n      });\n    };\n\n    _this.state = {\n      offsearch: \"\",\n      areasearch: \"\",\n      agesearch: \"\",\n      gendersearch: \"\",\n      yearsearch: \"\",\n      monthsearch: \"\",\n      results: [],\n      chartData: {},\n      options: {},\n      GPS: [],\n      heatMapdata: {},\n      updated: false //Binding method to this class\n\n    };\n    _this.changeOff = _this.changeOff.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeArea = _this.changeArea.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.optionAge = _this.optionAge.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.optionGender = _this.optionGender.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeYear = _this.changeYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeMonth = _this.changeMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Buttons = _this.Buttons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Setting input box items into Search filters\n\n\n  _createClass(Search, [{\n    key: \"changeOff\",\n    value: function changeOff(event) {\n      this.setState({\n        offsearch: event.target.value\n      });\n    }\n  }, {\n    key: \"changeArea\",\n    value: function changeArea(event) {\n      this.setState({\n        areasearch: event.target.value\n      });\n    }\n  }, {\n    key: \"optionAge\",\n    value: function optionAge(event) {\n      this.setState({\n        agesearch: event.target.value\n      });\n    }\n  }, {\n    key: \"optionGender\",\n    value: function optionGender(event) {\n      this.setState({\n        gendersearch: event.target.value\n      });\n    }\n  }, {\n    key: \"changeYear\",\n    value: function changeYear(event) {\n      this.setState({\n        yearsearch: event.target.value\n      });\n    }\n  }, {\n    key: \"changeMonth\",\n    value: function changeMonth(event) {\n      this.setState({\n        monthsearch: event.target.value\n      });\n    } //Turn Search data into processable chartData\n    //Coloring Doughnut chart\n\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var area = this.state.results.map(function (area) {\n        return area.LGA;\n      });\n      var numbers = this.state.results.map(function (number) {\n        return number.total;\n      });\n      var rColor = [];\n      var rHighlight = [];\n\n      for (var i in area) {\n        var r = Math.floor(Math.random() * 200);\n        var g = Math.floor(Math.random() * 200);\n        var b = Math.floor(Math.random() * 200);\n        var c = 'rgb(' + r + ', ' + g + ', ' + b + ')';\n        var h = 'rgb(' + (r + 20) + ', ' + (g + 20) + ', ' + (b + 20) + ')';\n        rColor[i] = c;\n        rHighlight[i] = h;\n      }\n\n      this.setState({\n        chartData: {\n          labels: area,\n          datasets: [{\n            label: 'Crime Stats in Pie Chart',\n            data: numbers,\n            backgroundColor: rColor,\n            highlight: rHighlight\n          }]\n        }\n      });\n    } //Get search result from API then organise into states for updates\n\n  }, {\n    key: \"updateHeatmap\",\n    //Update and Show Heat Map \n    value: function updateHeatmap() {\n      // console.log(this.state.GPS)\n      this.setState({\n        updated: true,\n        heatMapdata: {\n          positions: this.state.GPS,\n          options: {\n            radius: 50,\n            opacity: 0.8\n          }\n        }\n      });\n    } //All buttons for filtering API\n\n  }, {\n    key: \"Buttons\",\n    value: function Buttons() {\n      return React.createElement(\"div\", {\n        className: \"all-filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"filter-input-offence\",\n        name: \"offence\",\n        id: \"offence\",\n        type: \"offence\",\n        placeholder: \"Search Offence (Required)\",\n        value: this.state.offsearch,\n        onChange: this.changeOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"filter-input\",\n        name: \"lga\",\n        id: \"lga\",\n        type: \"lga\",\n        placeholder: \"Search Location\",\n        value: this.state.areasearch,\n        onChange: this.changeArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        className: \"age-option\",\n        id: \"age\",\n        value: this.state.agesearch,\n        onChange: this.optionAge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Empty\"), React.createElement(\"option\", {\n        value: \"Adult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Adult\"), React.createElement(\"option\", {\n        value: \"Juvenile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Juvenile\")), React.createElement(\"select\", {\n        className: \"sex-option\",\n        id: \"sex\",\n        value: this.state.gendersearch,\n        onChange: this.optionGender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Empty\"), React.createElement(\"option\", {\n        value: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Male\"), React.createElement(\"option\", {\n        value: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Female\"))), React.createElement(\"div\", {\n        className: \"yearmonth-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"filter-input-yearmonth\",\n        name: \"year\",\n        id: \"year\",\n        type: \"year\",\n        placeholder: \"2003,2005 (Year: 2001-2019)\",\n        value: this.state.yearsearch,\n        onChange: this.changeYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"filter-input-yearmonth\",\n        name: \"month\",\n        id: \"month\",\n        type: \"month\",\n        placeholder: \"1,3,5,4 (Month: 1-12)\",\n        value: this.state.monthsearch,\n        onChange: this.changeMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"filter-click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"search-btn\",\n        id: \"search-button\",\n        type: \"button\",\n        onClick: this.fetchdata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"button\", {\n        className: \"search-btn\",\n        id: \"show-graph\",\n        type: \"button\",\n        onClick: this.getChartData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Update Graph Result\"), React.createElement(\"button\", {\n        className: \"search-btn\",\n        id: \"update-map\",\n        type: \"button\",\n        onClick: this.updateHeatmap.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Update Map Result\")));\n    } //Rendering according to map update\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (sessionStorage.getItem(\"token\") !== null) {\n        if (!this.state.updated) {\n          return React.createElement(\"div\", {\n            className: \"search-page\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, this.Buttons(), React.createElement(\"div\", {\n            className: \"search-table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(ReactTable, {\n            data: this.state.results,\n            columns: [{\n              Header: \"LGA\",\n              accessor: \"LGA\",\n              width: 300,\n              Cell: function Cell(row) {\n                return React.createElement(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 252\n                  },\n                  __self: this\n                }, row.value);\n              }\n            }, {\n              Header: \"Total Number\",\n              accessor: \"total\",\n              width: 150,\n              Cell: function Cell(row) {\n                return React.createElement(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 259\n                  },\n                  __self: this\n                }, row.value);\n              }\n            }],\n            filterable: true,\n            defaultFilterMethod: function defaultFilterMethod(filter, row) {\n              return filterCaseInsensitive(filter, row);\n            },\n            defaultPageSize: 10,\n            pageSizeOptions: [10],\n            className: \"-short\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"clear-float\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"chart-display\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, React.createElement(Doughnut, {\n            data: this.state.chartData,\n            options: {\n              title: {\n                display: true,\n                text: \"Crime Stats In Queensland\",\n                fontSize: 30\n              },\n              legend: {\n                display: false\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }))));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"search-page\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, this.Buttons(), React.createElement(\"div\", {\n            className: \"search-table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(ReactTable, {\n            data: this.state.results,\n            columns: [{\n              Header: \"LGA\",\n              accessor: \"LGA\",\n              width: 300,\n              Cell: function Cell(row) {\n                return React.createElement(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 303\n                  },\n                  __self: this\n                }, row.value);\n              }\n            }, {\n              Header: \"Total Number\",\n              accessor: \"total\",\n              width: 150,\n              Cell: function Cell(row) {\n                return React.createElement(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 310\n                  },\n                  __self: this\n                }, row.value);\n              }\n            }],\n            filterable: true,\n            defaultFilterMethod: function defaultFilterMethod(filter, row) {\n              return filterCaseInsensitive(filter, row);\n            },\n            defaultPageSize: 10,\n            pageSizeOptions: [5, 10, 20, 40],\n            className: \"-short\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"clear-float\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"chart-display\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }, React.createElement(Doughnut, {\n            data: this.state.chartData,\n            options: {\n              title: {\n                display: true,\n                text: \"Crime Stats In Queensland\",\n                fontSize: 30\n              },\n              legend: {\n                display: false\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"heat-map\",\n            style: {\n              height: '50vh',\n              width: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }, React.createElement(GoogleMapReact, {\n            bootstrapURLKeys: {\n              key: 'AIzaSyDzZe3mc2opzmbZavOC5j335M216rWgqEY'\n            },\n            center: [-22.9176, 146.7028],\n            zoom: 5.2,\n            heatmapLibrary: true,\n            heatmap: this.state.heatMapdata,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340\n            },\n            __self: this\n          }, React.createElement(AnyReactComponent, {\n            lat: -27.4698,\n            lng: 153.0251,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347\n            },\n            __self: this\n          }))));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          className: \"access-denied\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, \"YOUR ACCESS TO AUTHORIZED DATA IS DENIED.\"), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, \"PLEASE SIGN IN OR CONTACT SYSTEM ADMIN.\"));\n      }\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search };","map":{"version":3,"sources":["/Users/jackhu/Downloads/crime/src/newsearch.js"],"names":["React","ReactTable","filterCaseInsensitive","Bar","Line","Pie","Doughnut","GoogleMapReact","AnyReactComponent","text","Search","props","fetchdata","key","sessionStorage","getItem","getParam","method","head","Authorization","headers","baseUrl","query","state","offsearch","filterlga","areasearch","filterage","agesearch","filtergender","gendersearch","filteryear","yearsearch","filtermonth","monthsearch","url","fetch","encodeURI","then","result","json","data","results","map","off","LGA","total","GPS","latlng","lat","lng","weight","nozero","i","length","push","setState","updated","catch","error","console","log","message","chartData","options","heatMapdata","changeOff","bind","changeArea","optionAge","optionGender","changeYear","changeMonth","Buttons","event","target","value","area","numbers","number","rColor","rHighlight","r","Math","floor","random","g","b","c","h","labels","datasets","label","backgroundColor","highlight","positions","radius","opacity","getChartData","updateHeatmap","Header","accessor","width","Cell","row","textAlign","filter","title","display","fontSize","legend","height","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,SAASC,qBAAT,QAAsC,YAAtC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAd;AAAA,CAA1B;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UAkFnBC,SAlFmB,GAkFP,YAAM;AACd,UAAIC,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAV;AACA,UAAIC,QAAQ,GAAG;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAf;AACA,UAAIC,IAAI,GAAG;AAAEC,QAAAA,aAAa,mBAAYN,GAAZ;AAAf,OAAX;AAEAG,MAAAA,QAAQ,CAACI,OAAT,GAAmBF,IAAnB;AAEA,UAAMG,OAAO,GAAG,qCAAhB;AACA,UAAMC,KAAK,GAAG,aAAa,MAAKC,KAAL,CAAWC,SAAtC;AACA,UAAMC,SAAS,GAAG,UAAU,MAAKF,KAAL,CAAWG,UAAvC;AACA,UAAMC,SAAS,GAAG,SAAS,MAAKJ,KAAL,CAAWK,SAAtC;AACA,UAAMC,YAAY,GAAG,YAAY,MAAKN,KAAL,CAAWO,YAA5C;AACA,UAAMC,UAAU,GAAG,UAAU,MAAKR,KAAL,CAAWS,UAAxC;AACA,UAAMC,WAAW,GAAG,WAAW,MAAKV,KAAL,CAAWW,WAA1C;AAEA,UAAIC,GAAG,GAAGd,OAAO,GAAGC,KAAV,GAAkB,GAAlB,GAAwBG,SAAxB,GAAoC,GAApC,GAA0CE,SAA1C,GAAsD,GAAtD,GAA4DE,YAA5D,GAA2E,GAA3E,GAAiFE,UAAjF,GAA8F,GAA9F,GAAoGE,WAA9G;AAEAG,MAAAA,KAAK,CAACC,SAAS,CAACF,GAAD,CAAV,EAAiBnB,QAAjB,CAAL,CACKsB,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,eAAQA,MAAM,CAACC,IAAP,EAAR;AACH,OAHL,EAIKF,IAJL,CAIU,UAAAG,IAAI,EAAI;AACV;AACA,YAAIC,OAAO,GAAGD,IAAI,CAACF,MAAL,CAAYI,GAAZ,CAAgB,UAACC,GAAD,EAAS;AACnC,iBAAQ;AACJC,YAAAA,GAAG,EAAED,GAAG,CAACC,GADL;AAEJC,YAAAA,KAAK,EAAEF,GAAG,CAACE;AAFP,WAAR;AAIH,SALa,CAAd,CAFU,CAQV;;AACA,YAAIC,GAAG,GAAGN,IAAI,CAACF,MAAL,CAAYI,GAAZ,CAAgB,UAACK,MAAD,EAAY;AAClC,iBAAQ;AACJC,YAAAA,GAAG,EAAED,MAAM,CAACC,GADR;AAEJC,YAAAA,GAAG,EAAEF,MAAM,CAACE,GAFR;AAGJC,YAAAA,MAAM,EAAEH,MAAM,CAACF;AAHX,WAAR;AAKH,SANS,CAAV;AAOA,YAAIM,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,OAAO,CAACY,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,cAAGX,OAAO,CAACW,CAAD,CAAP,CAAWP,KAAX,KAAqB,CAAxB,EAA0B;AACtBM,YAAAA,MAAM,CAACG,IAAP,CAAYb,OAAO,CAACW,CAAD,CAAnB;AACH;AACJ;;AACD,cAAKG,QAAL,CAAc;AAAEd,UAAAA,OAAO,EAAEU;AAAX,SAAd;;AACA,cAAKI,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAEA;AAAP,SAAd;AACH,OA5BL,EA6BKT,IA7BL,EA8BQ;AACA;AACA,YAAKkB,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd,CAhCR,EAoCKC,KApCL,CAoCW,UAAUC,KAAV,EAAiB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CACI,sDADJ,EAEIF,KAAK,CAACG,OAFV;AAIH,OAzCL;AA0CH,KA7IkB;;AAEf,UAAKvC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETE,MAAAA,UAAU,EAAE,EAFH;AAGTE,MAAAA,SAAS,EAAE,EAHF;AAITE,MAAAA,YAAY,EAAE,EAJL;AAKTE,MAAAA,UAAU,EAAE,EALH;AAMTE,MAAAA,WAAW,EAAE,EANJ;AAOTQ,MAAAA,OAAO,EAAE,EAPA;AAQTqB,MAAAA,SAAS,EAAE,EARF;AASTC,MAAAA,OAAO,EAAE,EATA;AAUTjB,MAAAA,GAAG,EAAE,EAVI;AAWTkB,MAAAA,WAAW,EAAE,EAXJ;AAYTR,MAAAA,OAAO,EAAE,KAZA,CAcb;;AAda,KAAb;AAeA,UAAKS,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,uDAAjB;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,uDAApB;AACA,UAAKI,UAAL,GAAkB,MAAKA,UAAL,CAAgBJ,IAAhB,uDAAlB;AACA,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBL,IAAjB,uDAAnB;AACA,UAAKM,OAAL,GAAe,MAAKA,OAAL,CAAaN,IAAb,uDAAf;AAvBe;AA2BlB,G,CACD;;;;;8BACUO,K,EAAO;AACb,WAAKlB,QAAL,CAAc;AAAEhC,QAAAA,SAAS,EAAEkD,KAAK,CAACC,MAAN,CAAaC;AAA1B,OAAd;AACH;;;+BACUF,K,EAAO;AACd,WAAKlB,QAAL,CAAc;AAAE9B,QAAAA,UAAU,EAAEgD,KAAK,CAACC,MAAN,CAAaC;AAA3B,OAAd;AACH;;;8BACSF,K,EAAO;AACb,WAAKlB,QAAL,CAAc;AAAE5B,QAAAA,SAAS,EAAE8C,KAAK,CAACC,MAAN,CAAaC;AAA1B,OAAd;AACH;;;iCACYF,K,EAAO;AAChB,WAAKlB,QAAL,CAAc;AAAE1B,QAAAA,YAAY,EAAE4C,KAAK,CAACC,MAAN,CAAaC;AAA7B,OAAd;AACH;;;+BACUF,K,EAAO;AACd,WAAKlB,QAAL,CAAc;AAAExB,QAAAA,UAAU,EAAE0C,KAAK,CAACC,MAAN,CAAaC;AAA3B,OAAd;AACH;;;gCACWF,K,EAAO;AACf,WAAKlB,QAAL,CAAc;AAAEtB,QAAAA,WAAW,EAAEwC,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd;AACH,K,CAED;AACA;;;;mCACe;AACX,UAAIC,IAAI,GAAG,KAAKtD,KAAL,CAAWmB,OAAX,CAAmBC,GAAnB,CAAuB,UAACkC,IAAD,EAAU;AACxC,eAAQA,IAAI,CAAChC,GAAb;AACH,OAFU,CAAX;AAGA,UAAIiC,OAAO,GAAG,KAAKvD,KAAL,CAAWmB,OAAX,CAAmBC,GAAnB,CAAuB,UAACoC,MAAD,EAAY;AAC7C,eAAQA,MAAM,CAACjC,KAAf;AACH,OAFa,CAAd;AAGA,UAAIkC,MAAM,GAAG,EAAb;AACA,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAI5B,CAAT,IAAcwB,IAAd,EAAoB;AAChB,YAAIK,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,YAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,YAAIE,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,YAAIG,CAAC,GAAG,SAASN,CAAT,GAAa,IAAb,GAAoBI,CAApB,GAAwB,IAAxB,GAA+BC,CAA/B,GAAmC,GAA3C;AACA,YAAIE,CAAC,GAAG,UAAUP,CAAC,GAAG,EAAd,IAAoB,IAApB,IAA4BI,CAAC,GAAG,EAAhC,IAAsC,IAAtC,IAA8CC,CAAC,GAAG,EAAlD,IAAwD,GAAhE;AACAP,QAAAA,MAAM,CAAC3B,CAAD,CAAN,GAAYmC,CAAZ;AACAP,QAAAA,UAAU,CAAC5B,CAAD,CAAV,GAAgBoC,CAAhB;AACH;;AACD,WAAKjC,QAAL,CAAc;AACVO,QAAAA,SAAS,EAAE;AACP2B,UAAAA,MAAM,EAAEb,IADD;AAEPc,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAE,0BADA;AAEPnD,YAAAA,IAAI,EAAEqC,OAFC;AAGPe,YAAAA,eAAe,EAAEb,MAHV;AAIPc,YAAAA,SAAS,EAAEb;AAJJ,WAAD;AAFH;AADD,OAAd;AAYH,K,CACD;;;;AA6DA;oCACgB;AACZ;AACA,WAAKzB,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVQ,QAAAA,WAAW,EAAE;AACT8B,UAAAA,SAAS,EAAE,KAAKxE,KAAL,CAAWwB,GADb;AAETiB,UAAAA,OAAO,EAAE;AACLgC,YAAAA,MAAM,EAAE,EADH;AAELC,YAAAA,OAAO,EAAE;AAFJ;AAFA;AAFH,OAAd;AAUH,K,CACD;;;;8BACU;AACN,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,EAAE,EAAC,SAHP;AAII,QAAA,IAAI,EAAC,SAJT;AAKI,QAAA,WAAW,EAAC,2BALhB;AAMI,QAAA,KAAK,EAAE,KAAK1E,KAAL,CAAWC,SANtB;AAOI,QAAA,QAAQ,EAAE,KAAK0C,SAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAWI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,IAAI,EAAC,KAFT;AAGI,QAAA,EAAE,EAAC,KAHP;AAII,QAAA,IAAI,EAAC,KAJT;AAKI,QAAA,WAAW,EAAC,iBALhB;AAMI,QAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWG,UANtB;AAOI,QAAA,QAAQ,EAAE,KAAK0C,UAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAqBI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,EAAE,EAAC,KAAlC;AAAwC,QAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWK,SAA1D;AAAqE,QAAA,QAAQ,EAAE,KAAKyC,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CArBJ,EA2BI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,EAAE,EAAC,KAAlC;AAAwC,QAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWO,YAA1D;AAAwE,QAAA,QAAQ,EAAE,KAAKwC,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CA3BJ,CADJ,EAmCI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,WAAW,EAAC,6BALhB;AAMI,QAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWS,UANtB;AAOI,QAAA,QAAQ,EAAE,KAAKuC,UAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,EAAE,EAAC,OAHP;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,WAAW,EAAC,uBALhB;AAMI,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWW,WANtB;AAOI,QAAA,QAAQ,EAAE,KAAKsC,WAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CAnCJ,EAuDI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,EAAE,EAAC,eAAlC;AAAkD,QAAA,IAAI,EAAC,QAAvD;AAAgE,QAAA,OAAO,EAAE,KAAK5D,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,EAAE,EAAC,YAAlC;AAA+C,QAAA,IAAI,EAAC,QAApD;AAA6D,QAAA,OAAO,EAAE,KAAKsF,YAAL,CAAkB/B,IAAlB,CAAuB,IAAvB,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,EAAE,EAAC,YAAlC;AAA+C,QAAA,IAAI,EAAC,QAApD;AAA6D,QAAA,OAAO,EAAE,KAAKgC,aAAL,CAAmBhC,IAAnB,CAAwB,IAAxB,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CAvDJ,CADJ;AA+DH,K,CACD;;;;6BACS;AACL,UAAIrD,cAAc,CAACC,OAAf,CAAuB,OAAvB,MAAoC,IAAxC,EAA8C;AAC1C,YAAI,CAAC,KAAKQ,KAAL,CAAWkC,OAAhB,EAAyB;AACrB,iBACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKgB,OAAL,EADL,EAGI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,UAAD;AACI,YAAA,IAAI,EAAE,KAAKlD,KAAL,CAAWmB,OADrB;AAEI,YAAA,OAAO,EAAE,CACL;AACI0D,cAAAA,MAAM,EAAE,KADZ;AAEIC,cAAAA,QAAQ,EAAE,KAFd;AAGIC,cAAAA,KAAK,EAAE,GAHX;AAIIC,cAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,uBACL;AAAK,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAE;AAAb,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsCD,GAAG,CAAC5B,KAA1C,CADK;AAAA;AAJb,aADK,EAQF;AACCwB,cAAAA,MAAM,EAAE,cADT;AAECC,cAAAA,QAAQ,EAAE,OAFX;AAGCC,cAAAA,KAAK,EAAE,GAHR;AAICC,cAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,uBACL;AAAK,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAE;AAAb,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsCD,GAAG,CAAC5B,KAA1C,CADK;AAAA;AAJV,aARE,CAFb;AAkBI,YAAA,UAAU,MAlBd;AAmBI,YAAA,mBAAmB,EAAE,6BAAC8B,MAAD,EAASF,GAAT;AAAA,qBAAiBtG,qBAAqB,CAACwG,MAAD,EAASF,GAAT,CAAtC;AAAA,aAnBzB;AAoBI,YAAA,eAAe,EAAE,EApBrB;AAqBI,YAAA,eAAe,EAAE,CAAC,EAAD,CArBrB;AAsBI,YAAA,SAAS,EAAC,QAtBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAHJ,EA8BI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAE,KAAKjF,KAAL,CAAWwC,SAA3B;AACI,YAAA,OAAO,EAAE;AACL4C,cAAAA,KAAK,EAAE;AACHC,gBAAAA,OAAO,EAAE,IADN;AAEHnG,gBAAAA,IAAI,EAAE,2BAFH;AAGHoG,gBAAAA,QAAQ,EAAE;AAHP,eADF;AAMLC,cAAAA,MAAM,EAAE;AACJF,gBAAAA,OAAO,EAAE;AADL;AANH,aADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CA9BJ,CADJ;AAiDH,SAlDD,MAmDK;AACD,iBACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKnC,OAAL,EADL,EAGI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,UAAD;AACI,YAAA,IAAI,EAAE,KAAKlD,KAAL,CAAWmB,OADrB;AAEI,YAAA,OAAO,EAAE,CACL;AACI0D,cAAAA,MAAM,EAAE,KADZ;AAEIC,cAAAA,QAAQ,EAAE,KAFd;AAGIC,cAAAA,KAAK,EAAE,GAHX;AAIIC,cAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,uBACL;AAAK,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAE;AAAb,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsCD,GAAG,CAAC5B,KAA1C,CADK;AAAA;AAJb,aADK,EAQF;AACCwB,cAAAA,MAAM,EAAE,cADT;AAECC,cAAAA,QAAQ,EAAE,OAFX;AAGCC,cAAAA,KAAK,EAAE,GAHR;AAICC,cAAAA,IAAI,EAAE,cAAAC,GAAG;AAAA,uBACL;AAAK,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAE;AAAb,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsCD,GAAG,CAAC5B,KAA1C,CADK;AAAA;AAJV,aARE,CAFb;AAkBI,YAAA,UAAU,MAlBd;AAmBI,YAAA,mBAAmB,EAAE,6BAAC8B,MAAD,EAASF,GAAT;AAAA,qBAAiBtG,qBAAqB,CAACwG,MAAD,EAASF,GAAT,CAAtC;AAAA,aAnBzB;AAoBI,YAAA,eAAe,EAAE,EApBrB;AAqBI,YAAA,eAAe,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CArBrB;AAsBI,YAAA,SAAS,EAAC,QAtBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAHJ,EA8BI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAE,KAAKjF,KAAL,CAAWwC,SAA3B;AACI,YAAA,OAAO,EAAE;AACL4C,cAAAA,KAAK,EAAE;AACHC,gBAAAA,OAAO,EAAE,IADN;AAEHnG,gBAAAA,IAAI,EAAE,2BAFH;AAGHoG,gBAAAA,QAAQ,EAAE;AAHP,eADF;AAMLC,cAAAA,MAAM,EAAE;AACJF,gBAAAA,OAAO,EAAE;AADL;AANH,aADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CA9BJ,EAgDI;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAE;AAAEG,cAAAA,MAAM,EAAE,MAAV;AAAkBT,cAAAA,KAAK,EAAE;AAAzB,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,cAAD;AACI,YAAA,gBAAgB,EAAE;AAAEzF,cAAAA,GAAG,EAAE;AAAP,aADtB;AAEI,YAAA,MAAM,EAAE,CAAC,CAAC,OAAF,EAAW,QAAX,CAFZ;AAGI,YAAA,IAAI,EAAE,GAHV;AAII,YAAA,cAAc,EAAE,IAJpB;AAKI,YAAA,OAAO,EAAE,KAAKU,KAAL,CAAW0C,WALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOI,oBAAC,iBAAD;AACI,YAAA,GAAG,EAAE,CAAC,OADV;AAEI,YAAA,GAAG,EAAE,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ,CAhDJ,CADJ;AAgEH;AACJ,OAtHD,MAuHK;AACD,eACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFJ,CADJ;AAMH;AACJ;;;;EAjWgBjE,KAAK,CAACgH,S;;AAoW3B,SAAStG,MAAT","sourcesContent":["import React from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { filterCaseInsensitive } from \"./offences\";\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport GoogleMapReact from 'google-map-react';\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            offsearch: \"\",\n            areasearch: \"\",\n            agesearch: \"\",\n            gendersearch: \"\",\n            yearsearch: \"\",\n            monthsearch: \"\",\n            results: [],\n            chartData: {},\n            options: {},\n            GPS: [],\n            heatMapdata: {},\n            updated: false,\n        }\n        //Binding method to this class\n        this.changeOff = this.changeOff.bind(this);\n        this.changeArea = this.changeArea.bind(this);\n        this.optionAge = this.optionAge.bind(this);\n        this.optionGender = this.optionGender.bind(this);\n        this.changeYear = this.changeYear.bind(this);\n        this.changeMonth = this.changeMonth.bind(this);\n        this.Buttons = this.Buttons.bind(this);\n\n\n\n    }\n    //Setting input box items into Search filters\n    changeOff(event) {\n        this.setState({ offsearch: event.target.value });\n    }\n    changeArea(event) {\n        this.setState({ areasearch: event.target.value });\n    }\n    optionAge(event) {\n        this.setState({ agesearch: event.target.value });\n    }\n    optionGender(event) {\n        this.setState({ gendersearch: event.target.value });\n    }\n    changeYear(event) {\n        this.setState({ yearsearch: event.target.value });\n    }\n    changeMonth(event) {\n        this.setState({ monthsearch: event.target.value });\n    }\n\n    //Turn Search data into processable chartData\n    //Coloring Doughnut chart\n    getChartData() {\n        let area = this.state.results.map((area) => {\n            return (area.LGA)\n        })\n        let numbers = this.state.results.map((number) => {\n            return (number.total)\n        })\n        let rColor = [];\n        let rHighlight = [];\n        for (var i in area) {\n            let r = Math.floor(Math.random() * 200);\n            let g = Math.floor(Math.random() * 200);\n            let b = Math.floor(Math.random() * 200);\n            let c = 'rgb(' + r + ', ' + g + ', ' + b + ')';\n            let h = 'rgb(' + (r + 20) + ', ' + (g + 20) + ', ' + (b + 20) + ')';\n            rColor[i] = c;\n            rHighlight[i] = h;\n        }\n        this.setState({\n            chartData: {\n                labels: area,\n                datasets: [{\n                    label: 'Crime Stats in Pie Chart',\n                    data: numbers,\n                    backgroundColor: rColor,\n                    highlight: rHighlight,\n                }],\n\n            },\n        })\n    }\n    //Get search result from API then organise into states for updates\n    fetchdata = () => {\n        let key = sessionStorage.getItem(\"token\");\n        let getParam = { method: \"GET\" };\n        let head = { Authorization: `Bearer ${key}` };\n\n        getParam.headers = head;\n\n        const baseUrl = \"https://cab230.hackhouse.sh/search?\";\n        const query = \"offence=\" + this.state.offsearch;\n        const filterlga = \"area=\" + this.state.areasearch;\n        const filterage = \"age=\" + this.state.agesearch;\n        const filtergender = \"gender=\" + this.state.gendersearch;\n        const filteryear = \"year=\" + this.state.yearsearch;\n        const filtermonth = \"month=\" + this.state.monthsearch;\n\n        let url = baseUrl + query + \"&\" + filterlga + \"&\" + filterage + \"&\" + filtergender + \"&\" + filteryear + \"&\" + filtermonth;\n\n        fetch(encodeURI(url), getParam)\n            .then(result => {\n                return (result.json());\n            })\n            .then(data => {\n                //Fill in data for the table \n                let results = data.result.map((off) => {\n                    return ({\n                        LGA: off.LGA,\n                        total: off.total\n                    })\n                })\n                //Fill in data for Heat map \n                let GPS = data.result.map((latlng) => {\n                    return ({\n                        lat: latlng.lat,\n                        lng: latlng.lng,\n                        weight: latlng.total,\n                    })\n                })\n                let nozero = [];\n                for (var i = 0; i < results.length; i++){\n                    if(results[i].total !== 0){\n                        nozero.push(results[i]);\n                    }\n                }\n                this.setState({ results: nozero })\n                this.setState({ GPS: GPS })\n            })\n            .then(\n                //Clear Map for re-rendering later\n                //Heatmap is not updated dynamically\n                this.setState({\n                    updated: false,\n                })\n            )\n            .catch(function (error) {\n                console.log(\n                    \"There has been a problem with your fetch operation: \",\n                    error.message\n                );\n            });\n    }\n    //Update and Show Heat Map \n    updateHeatmap() {\n        // console.log(this.state.GPS)\n        this.setState({\n            updated: true,\n            heatMapdata: {\n                positions: this.state.GPS,\n                options: {\n                    radius: 50,\n                    opacity: 0.8,\n                }\n            }\n        })\n    }\n    //All buttons for filtering API\n    Buttons() {\n        return (\n            <div className=\"all-filters\">\n                <div className=\"filter-btns\">\n                    <input\n                        className=\"filter-input-offence\"\n                        name=\"offence\"\n                        id=\"offence\"\n                        type=\"offence\"\n                        placeholder=\"Search Offence (Required)\"\n                        value={this.state.offsearch}\n                        onChange={this.changeOff}\n                    />\n\n                    <input\n                        className=\"filter-input\"\n                        name=\"lga\"\n                        id=\"lga\"\n                        type=\"lga\"\n                        placeholder=\"Search Location\"\n                        value={this.state.areasearch}\n                        onChange={this.changeArea}\n                    />\n\n                    <select className=\"age-option\" id=\"age\" value={this.state.agesearch} onChange={this.optionAge}>\n                        <option value=\"\">Empty</option>\n                        <option value=\"Adult\">Adult</option>\n                        <option value=\"Juvenile\">Juvenile</option>\n                    </select>\n\n                    <select className=\"sex-option\" id=\"sex\" value={this.state.gendersearch} onChange={this.optionGender}>\n                        <option value=\"\">Empty</option>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                    </select>\n\n                </div>\n                <div className=\"yearmonth-filter\">\n                    <input\n                        className=\"filter-input-yearmonth\"\n                        name=\"year\"\n                        id=\"year\"\n                        type=\"year\"\n                        placeholder=\"2003,2005 (Year: 2001-2019)\"\n                        value={this.state.yearsearch}\n                        onChange={this.changeYear}\n                    />\n                    <input\n                        className=\"filter-input-yearmonth\"\n                        name=\"month\"\n                        id=\"month\"\n                        type=\"month\"\n                        placeholder=\"1,3,5,4 (Month: 1-12)\"\n                        value={this.state.monthsearch}\n                        onChange={this.changeMonth}\n                    />\n                </div>\n                <div className=\"filter-click\">\n                    <button className=\"search-btn\" id=\"search-button\" type=\"button\" onClick={this.fetchdata}>Search</button>\n                    <button className=\"search-btn\" id=\"show-graph\" type=\"button\" onClick={this.getChartData.bind(this)}>Update Graph Result</button>\n                    <button className=\"search-btn\" id=\"update-map\" type=\"button\" onClick={this.updateHeatmap.bind(this)}>Update Map Result</button>\n                </div>\n            </div>\n        );\n    }\n    //Rendering according to map update\n    render() {\n        if (sessionStorage.getItem(\"token\") !== null) {\n            if (!this.state.updated) {\n                return (\n                    <div className=\"search-page\">\n                        {this.Buttons()}\n                        {/*This is table implementation*/}\n                        <div className=\"search-table\">\n                            <ReactTable\n                                data={this.state.results}\n                                columns={[\n                                    {\n                                        Header: \"LGA\",\n                                        accessor: \"LGA\",\n                                        width: 300,\n                                        Cell: row => (\n                                            <div style={{ textAlign: \"center\" }}>{row.value}</div>),\n\n                                    }, {\n                                        Header: \"Total Number\",\n                                        accessor: \"total\",\n                                        width: 150,\n                                        Cell: row => (\n                                            <div style={{ textAlign: \"center\" }}>{row.value}</div>),\n                                    }\n                                ]}\n                                filterable\n                                defaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row)}\n                                defaultPageSize={10}\n                                pageSizeOptions={[10]}\n                                className=\"-short\"\n                            />\n                        </div>\n                        {/*This is Graph implementation*/}\n                        <div className=\"clear-float\">\n                            <div className=\"chart-display\">\n                                <Doughnut data={this.state.chartData}\n                                    options={{\n                                        title: {\n                                            display: true,\n                                            text: \"Crime Stats In Queensland\",\n                                            fontSize: 30,\n                                        },\n                                        legend: {\n                                            display: false\n                                        },\n\n                                    }} />\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className=\"search-page\">\n                        {this.Buttons()}\n                        {/*This is table implementation*/}\n                        <div className=\"search-table\">\n                            <ReactTable\n                                data={this.state.results}\n                                columns={[\n                                    {\n                                        Header: \"LGA\",\n                                        accessor: \"LGA\",\n                                        width: 300,\n                                        Cell: row => (\n                                            <div style={{ textAlign: \"center\" }}>{row.value}</div>),\n\n                                    }, {\n                                        Header: \"Total Number\",\n                                        accessor: \"total\",\n                                        width: 150,\n                                        Cell: row => (\n                                            <div style={{ textAlign: \"center\" }}>{row.value}</div>),\n                                    }\n                                ]}\n                                filterable\n                                defaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row)}\n                                defaultPageSize={10}\n                                pageSizeOptions={[5, 10, 20, 40]}\n                                className=\"-short\"\n                            />\n                        </div>\n                        {/*This is graph implementation*/}\n                        <div className=\"clear-float\">\n                            <div className=\"chart-display\">\n                                <Doughnut data={this.state.chartData}\n                                    options={{\n                                        title: {\n                                            display: true,\n                                            text: \"Crime Stats In Queensland\",\n                                            fontSize: 30,\n                                        },\n                                        legend: {\n                                            display: false\n                                        },\n\n                                    }} />\n                            </div>\n                        </div>\n\n                        {/*This is map implementation*/}\n                        <div className=\"heat-map\" style={{ height: '50vh', width: '100%' }}>\n                            <GoogleMapReact\n                                bootstrapURLKeys={{ key: 'AIzaSyDzZe3mc2opzmbZavOC5j335M216rWgqEY' }}\n                                center={[-22.9176, 146.7028]}\n                                zoom={5.2}\n                                heatmapLibrary={true}\n                                heatmap={this.state.heatMapdata}\n                            >\n                                <AnyReactComponent\n                                    lat={-27.4698}\n                                    lng={153.0251} />\n                            </GoogleMapReact>\n                        </div>\n                    </div>\n                );\n            }\n        }\n        else {\n            return (\n                <div className=\"access-denied\">\n                    <h1>YOUR ACCESS TO AUTHORIZED DATA IS DENIED.</h1>\n                    <h1>PLEASE SIGN IN OR CONTACT SYSTEM ADMIN.</h1>\n                </div>\n            )\n        }\n    }\n}\n\nexport { Search }"]},"metadata":{},"sourceType":"module"}