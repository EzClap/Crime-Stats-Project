{"ast":null,"code":"import _classCallCheck from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackhu/Downloads/crime/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackhu/Downloads/crime/src/chart.js\";\nimport React from \"react\";\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      chartData: {\n        labels: [_this.props.data.lga],\n        datasets: {\n          label: 'LGA',\n          data: [_this.props.data.total] // backgroundColor:[],\n\n        }\n      }\n    };\n    return _this;\n  } // componentWillMount(){\n  //     let lga = [];\n  //     for (var area of this.props){\n  //         lga.push(area);\n  //     }\n  //     // lga.push(this.props.map((area) => {\n  //     //     area.lga\n  //     // }));\n  //     let numbers = [];\n  //     for (var number of this.props){\n  //         numbers.push(number);\n  //     }\n  //     // numbers.push(this.props.map((area) => {\n  //     //     area.total\n  //     // }));\n  //     this.setState({\n  //         chartData:{\n  //             labels: lga,\n  //             datasets:{\n  //                 label: 'LGA',\n  //                 data:numbers,\n  //                 // backgroundColor:[],\n  //             }\n  //         }\n  //     })\n  // }\n  // componentDidMount(){\n  //     const results = this.props.\n  // }\n\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.chartData,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport { Chart };","map":{"version":3,"sources":["/Users/jackhu/Downloads/crime/src/chart.js"],"names":["React","Bar","Line","Pie","Chart","props","state","chartData","labels","data","lga","datasets","label","total","maintainAspectRatio","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,iBAA/B;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AACPC,QAAAA,MAAM,EAAE,CAAC,MAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAjB,CADD;AAEPC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,KAAK,EAAE,KADD;AAENH,UAAAA,IAAI,EAAE,CAAC,MAAKJ,KAAL,CAAWI,IAAX,CAAgBI,KAAjB,CAFA,CAGN;;AAHM;AAFH;AADF,KAAb;AAFe;AAalB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;6BAES;AACL,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,SADrB;AAGI,QAAA,OAAO,EAAE;AACLO,UAAAA,mBAAmB,EAAE;AADhB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAWH;;;;EA3Ded,KAAK,CAACe,S;;AA6D1B,SAASX,KAAT","sourcesContent":["import React from \"react\";\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: {\n                labels: [this.props.data.lga],\n                datasets: {\n                    label: 'LGA',\n                    data: [this.props.data.total],\n                    // backgroundColor:[],\n                }\n\n            }\n        }\n    }\n\n    // componentWillMount(){\n    //     let lga = [];\n    //     for (var area of this.props){\n    //         lga.push(area);\n    //     }\n    //     // lga.push(this.props.map((area) => {\n    //     //     area.lga\n    //     // }));\n    //     let numbers = [];\n    //     for (var number of this.props){\n    //         numbers.push(number);\n    //     }\n    //     // numbers.push(this.props.map((area) => {\n    //     //     area.total\n    //     // }));\n    //     this.setState({\n    //         chartData:{\n    //             labels: lga,\n    //             datasets:{\n    //                 label: 'LGA',\n    //                 data:numbers,\n    //                 // backgroundColor:[],\n    //             }\n    //         }\n    //     })\n    // }\n\n    // componentDidMount(){\n    //     const results = this.props.\n    // }\n\n    render() {\n        return (\n            <div className=\"graph\">\n                <Bar\n                    data={this.state.chartData}\n\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            </div>\n        )\n    }\n}\nexport { Chart }"]},"metadata":{},"sourceType":"module"}