{
  "_from": "react-google-map",
  "_id": "react-google-map@3.1.1",
  "_inBundle": false,
  "_integrity": "sha512-8pcddNPqQloBUugqu98z+Mb/gOhY56hKi9sWi3vdbSgOjKL8cMHAEW8sKj3caUysNY89+dEEInyOIAgC7ZUVag==",
  "_location": "/react-google-map",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-google-map",
    "fetchSpec": "latest",
    "name": "react-google-map",
    "raw": "react-google-map",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-google-map/-/react-google-map-3.1.1.tgz",
  "_shasum": "e47e42287ef6bc7510422fbfd5014ab2b4a0d1b4",
  "_shrinkwrap": null,
  "_spec": "react-google-map",
  "_where": "/Users/jackhu/Downloads/crime",
  "author": {
    "email": "xuopled@gmail.com",
    "name": "CÃ©dric Delpoux"
  },
  "bugs": {
    "url": "https://github.com/xuopled/react-google-map/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "prop-types": "^15.6.0"
  },
  "deprecated": false,
  "description": "React component to render a Google Map with markers",
  "devDependencies": {
    "babel-core": "^6.14.0",
    "babel-eslint": "^6.1.0",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-object-rest-spread": "^6.19.0",
    "babel-preset-latest": "^6.14.0",
    "babel-preset-react": "^6.16.0",
    "eslint": "^3.5.0",
    "eslint-loader": "^1.5.0",
    "eslint-plugin-react": "^6.2.0",
    "node-libs-browser": "^0.5.2",
    "webpack": "^1.13.1"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/xuopled/react-google-map#readme",
  "keywords": [
    "google",
    "googlemaps",
    "map",
    "maps",
    "markers",
    "react"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "react-google-map",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.0 || ^16.0.0"
  },
  "readme": "# react-google-map ![npm](https://img.shields.io/npm/v/react-google-map.svg) ![license](https://img.shields.io/npm/l/react-google-map.svg)\n\nReact component to render a Google Map with markers.\nYou can use all official Google Maps API features.\n\nhttps://developers.google.com/maps/documentation/javascript/reference\n\n![react-google-map example](/screenshots/react-google-map-exemple.png)\n\n## Install\n\n```sh\nnpm install --save react-google-map\n```\n\n__If you don't have a solution to load `googleMaps`, you could use this package:__\n\n```sh\nnpm install --save react-google-maps-loader\n```\n\n## Changelog\n\nSee [changelog](./CHANGELOG.md)\n\n## Demo\n\n<http://xuopled.github.io/react-google-map/>\n\n## Usage\n```css\n\n.map {\n  height: 300px;\n}\n\n@media screen and (min-width: 1024px){\n    .map {\n        height: 500px;\n    }\n}\n```\n\n```js\nimport React, {PropTypes} from \"react\"\n\nimport GoogleMap from \"react-google-map\"\nimport GoogleMapLoader from \"react-google-maps-loader\"\n\nimport iconMarker from \"./assets/iconMarker.svg\"\nimport iconMarkerHover from \"./assets/iconMarkerHover.svg\"\n\nimport styles from \"./index.css\"\n\nconst MY_API_KEY = \"AIzaSyDwsdjfskhdbfjsdjbfksiTgnoriOAoUOgsUqOs10J0\" // fake\n\nconst Map = ({googleMaps}) => (\n  // GoogleMap component has a 100% height style.\n  // You have to set the DOM parent height.\n  // So you can perfectly handle responsive with differents heights.\n  <div className={styles.map}>\n    <GoogleMap\n      googleMaps={googleMaps}\n      // You can add and remove coordinates on the fly.\n      // The map will rerender new markers and remove the old ones.\n      coordinates={[\n        {\n          title: \"Toulouse\",\n          position: {\n            lat: 43.604363,\n            lng: 1.443363,\n          },\n          onLoaded: (googleMaps, map, marker) => {\n            // Set Marker animation\n            marker.setAnimation(googleMaps.Animation.BOUNCE)\n\n            // Define Marker InfoWindow\n            const infoWindow = new googleMaps.InfoWindow({\n              content: `\n                <div>\n                  <h3>Toulouse<h3>\n                  <div>\n                    Toulouse is the capital city of the southwestern\n                    French department of Haute-Garonne,\n                    as well as of the Occitanie region.\n                  </div>\n                </div>\n              `,\n            })\n\n            // Open InfoWindow when Marker will be clicked\n            googleMaps.event.addListener(marker, \"click\", () => {\n              infoWindow.open(map, marker)\n            })\n\n            // Change icon when Marker will be hovered\n            googleMaps.event.addListener(marker, \"mouseover\", () => {\n              marker.setIcon(iconMarkerHover)\n            })\n\n            googleMaps.event.addListener(marker, \"mouseout\", () => {\n              marker.setIcon(iconMarker)\n            })\n\n            // Open InfoWindow directly\n            infoWindow.open(map, marker)\n          },\n        }\n      ]}\n      center={{lat: 43.604363, lng: 1.443363}}\n      zoom={8}\n      onLoaded={(googleMaps, map) => {\n        map.setMapTypeId(googleMaps.MapTypeId.SATELLITE)\n      }}\n    />\n  </div>\n)\n\nMap.propTypes = {\n  googleMaps: PropTypes.object.isRequired,\n}\n\nexport default GoogleMapLoader(Map, {\n  libraries: [\"places\"],\n  key: MY_API_KEY,\n})\n\n```\n\n## Props\n  * `autoFitBounds`: Boolean - Enable it if you will add and remove markers on the fly. Bounds will fit automatically\n  * `boundsOffset`: Number - If `autoFitBounds` enabled you want custom bounds, - by default is 0.002\n  * `coordinates`: Array of Marker props. You can use all props defined in `google.maps.MarkerOptions` object specification (https://developers.google.com/maps/documentation/javascript/reference#MarkerOptions). If you need some `google.maps` constants, use the `onLoaded` prop (`onLoaded: (googleMaps, map, marker) => {}`) to update your map and markers - by default is []\n  * `googleMaps`: Object - injected by placesLoader,\n  * `onLoaded`: Function with two parameters (`onLoaded: (googleMaps, map) => {}`),\n\nYou can use all props defined in `google.maps.MapOptions` object specification:\nhttps://developers.google.com/maps/documentation/javascript/reference#MapOptions\n\nIf you need some `google.maps` constants, use the `onLoaded` prop\n\n## Development\n\n### Clean `lib` folder\n\n```js\nnpm run clean\n```\n\n### Build `lib` folder\n\n```js\nnpm run build\n```\n\n### Watch `src` folder\n\n```js\nnpm run watch\n```\n\n### Lint `src` folder\n\n```js\nnpm run lint\n```\n\n## License\n\nSee [MIT](./LICENCE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xuopled/react-google-map.git"
  },
  "scripts": {
    "build": "webpack --progress --colors",
    "clean": "rm -rf lib",
    "lint": "eslint src/",
    "prepublish": "npm run clean && npm run build",
    "watch": "webpack --progress --colors --watch"
  },
  "version": "3.1.1"
}
